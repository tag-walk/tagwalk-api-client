parameters:
  env(CACHE_DIRECTORY): '/tmp'

services:
  _defaults:
    autowire: false
    autoconfigure: true
    public: false

  Tagwalk\ApiClientBundle\Event\LoginSuccessHandler:
    arguments:
      - '@Tagwalk\ApiClientBundle\Security\AuthorizationHelper'

  Tagwalk\ApiClientBundle\Security\AuthorizationHelper:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $authorizationUrl: null

  Tagwalk\ApiClientBundle\Provider\ApiProvider:
    arguments:
      $requestStack: '@request_stack'
      $session: '@session'
      $tokenStorage: '@security.token_storage'
      $apiTokenStorage: '@Tagwalk\ApiClientBundle\Security\ApiTokenStorage'
      $baseUri:  ''
      $clientId: ''
      $clientSecret: ''
      $redirectUri: ''
      $timeout: 30.0
      $lightData: false
      $analytics: false
      $httpCache: true
      $cacheDirectory: '%env(CACHE_DIRECTORY)%'
      $showroom: null
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Security\ApiTokenStorage:
    arguments:
      $tokenStorage: '@security.token_storage'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Event\InteractiveLoginSubscriber:
    arguments:
      - '@session'
      - '@Tagwalk\ApiClientBundle\Security\ApiTokenStorage'

  Tagwalk\ApiClientBundle\Security\UserProvider:
    arguments:
      - '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      - '@serializer'

  Tagwalk\ApiClientBundle\Security\ApiAuthenticator:
    arguments:
      - '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      - '@serializer'
      - '@session'

  serializer.name_converter.camel_case_to_spinal_case:
    class: 'Tagwalk\ApiClientBundle\Serializer\NameConverter\CamelCaseToSpinalCaseNameConverter'

  # SERIALIZERS
  Tagwalk\ApiClientBundle\Serializer\Normalizer\DocumentNormalizer:
    tags: ['serializer.normalizer']
    arguments:
      $classMetadataFactory: '@serializer.mapping.class_metadata_factory'
      $nameConverter: '@serializer.name_converter.camel_case_to_snake_case'
      $propertyAccessor: '@property_accessor'
      $propertyTypeExtractor: '@property_info'
      $classDiscriminatorResolver: '@serializer.mapping.class_discriminator_resolver'

  Tagwalk\ApiClientBundle\Serializer\Normalizer\ExportNormalizer:
    tags: ['serializer.normalizer']
    arguments:
      $classMetadataFactory: '@serializer.mapping.class_metadata_factory'
      $nameConverter: '@serializer.name_converter.camel_case_to_spinal_case'
      $propertyAccessor: '@property_accessor'
      $propertyTypeExtractor: '@property_info'
      $classDiscriminatorResolver: '@serializer.mapping.class_discriminator_resolver'

  # FORMS
  Tagwalk\ApiClientBundle\Form\ExportModelsType:
    arguments:
      $router: '@router'
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $requestStack: '@request_stack'
      $tokenStorage: '@security.token_storage'

  Tagwalk\ApiClientBundle\Form\ExportTagsType:
    arguments:
      $router: '@router'
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $requestStack: '@request_stack'
      $tokenStorage: '@security.token_storage'

  Tagwalk\ApiClientBundle\Form\ExportDesignersType:
    arguments:
      $router: '@router'
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $requestStack: '@request_stack'
      $tokenStorage: '@security.token_storage'

  Tagwalk\ApiClientBundle\Form\ExportMoodboardsType:
    arguments:
      $router: '@router'
      $tokenStorage: '@security.token_storage'

  Tagwalk\ApiClientBundle\Form\ModelsWhoWalkedTheMostType:
    arguments:
      $router: '@router'
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $requestStack: '@request_stack'
      $tokenStorage: '@security.token_storage'

  # CONTROLLERS
  Tagwalk\ApiClientBundle\Controller\AutocompleteController:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $designerManager: '@Tagwalk\ApiClientBundle\Manager\DesignerManager'
      $individualManager: '@Tagwalk\ApiClientBundle\Manager\IndividualManager'
      $tagManager: '@Tagwalk\ApiClientBundle\Manager\TagManager'

  Tagwalk\ApiClientBundle\Controller\AnalyticsController:
    arguments:
      $manager: '@Tagwalk\ApiClientBundle\Manager\AnalyticsManager'

  # MANAGERS
  Tagwalk\ApiClientBundle\Manager\OfferManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\AnalyticsManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\ModelManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\CoverManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\TrendManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\NewsManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\PageManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\ConfigManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\CityManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\TagManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\DesignerManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\SeasonManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\IndividualManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\LiveManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\UserManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\ShowroomUserManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\MoodboardManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\MediaManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\HomepageManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\SellerManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\StreetstyleManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\GalleryManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\PressManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\AgencyManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\CollectionManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $serializer: '@serializer'
      $logger: '@logger'

  Tagwalk\ApiClientBundle\Manager\FilterManager:
    arguments:
      $apiProvider: '@Tagwalk\ApiClientBundle\Provider\ApiProvider'
      $logger: '@logger'
